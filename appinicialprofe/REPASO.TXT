IDE.- Integrated Development Enviroment
      Entorno Integrado de Desarrollo
      "El programa que usamos para programar"
      Eclipse en nuestro caso
      
.java .- Extensión del código fuente de una clase
.class .- Extensión del bytecode código máquina de una clase
.jar .- Conjunto de .class comprimidos (zip)

PascalCase .- Nomenclatura para clases
camelCase .- Nomenclatura para métodos

método .- o función un programa chiquitín

PASOS PARA DEFINIR UNA FUNCIÓN o MÉTODO
1)Definimos un nombre identificativo
2) Entradas : qué dato recibo/necesito para mi
   función
3) Salidas: Qué devuevlo ( a veces nada )

Clase : Concepto / Tipo
Objecto: Instancia de clase

JDK: Java Development Kit 
     Paquete de software que incluye 
     Todo lo necesario para poder programar 
     en Java y ejecutar
     
JSE : Java Standard Edition
      Todas las clases que vienen de serie
      17
      
Herencia/Object

Paquete: "Carpeta" que contiene clases relacionadas

INICIALIZAR: Todas las variables locales
de un método o función deben ser inicializadas

int, float, numero --> 0
char --> ' '
String / cualquier objeto --> null
boolean --> false

this.- Palabra reservada del lenguaje, que tiene
2 posibles significados, dependiendo se su ámbito
(en qué función/método aparece)
  
   1) si this aparece en el constructor
      representa el nuevo objeto / la nueva instancia
      que se está creando
      (p ej: el nuevo String, el nuevo DNI o la nueva Apuesta)
      
   2) En cualquier otro ámbito / otra función ó método
      this representa el objeto llamante
 
 
 SOBRECARGA / OVERLOAD: Ocurre cuando tengo un mismo método (mismo nombre)
 con distintos parámetros.
 
 SOBREESCRITURA / OVERRIDE: Cuando en una clase
 hija redefino un método de la clase padre
 Los métodos sobreescritos normalmente llevan
 la anotación @Override encima de su cabecera
 pero no es obligatorio
 
 
 ATRIBUTOS Y STATIC: Se dice que un atributo es estático si está
 definido a nivel de Clase (no de objeto) Es decir, está compartido
 por todos los objetos/instancias de la Clase.
 
 Los otros atributos "dinámicos" son lo que son distintos para cada
 objeto. Cada objeto tiene los suyos propios.
 
 ESTADO DE UN OBJETO O ESTADO: El valor de los atributos
 de un objeto en un momento dado
 
 CALLBACK: "Lamada por detrás". Ocurre cuando 
 a un función mía, le llama otro programa (Java)
 Por ejemplo, cuando Collections.sort() invoca
 a compareTo
      